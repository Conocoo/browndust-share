{"version":3,"sources":["i18n.js","reducers/characters.js","reducers/dataset.js","models/Formation.js","reducers/index.js","container/Header.js","service/Session.js","config/api.js","utils/index.js","actions/index.js","container/Formation.js","components/Mercenary.js","container/List.js","container/Toolbar.js","service/Characters.js","App.js","serviceWorker.js","index.js"],"names":["resources","en","translation","zhTW","zhCN","i18n","use","detector","initReactI18next","init","lng","keySeparator","interpolation","escapeValue","characters","state","action","type","payload","initialState","formation","id","top","left","backgroundImage","code","dragOver","options","backcolor","backimage","order","ref","dataset","combineReducers","Header","Component","connect","get","key","store","session","del","remove","thumbnailUrl","getThumbnailUrlByImageName","_uiIconImageName","split","resizeImageURL","datas","w","h","Promise","resolve","img","document","createElement","onload","canvas","ctx","getContext","width","height","drawImage","dataURI","toDataURL","src","crossOrigin","updateDataset","Formation","props","onDragStart","ev","scode","sid","dataTransfer","setData","onDragOver","preventDefault","onDragEnter","tid","onDragChangeStyle","onDragLeave","onDrop","getData","target","find","onCheckExistImage","onAddImage","onRemoveImage","onDragEnd","dispatch","alertID","alertTimer","myRef","React","createRef","this","c","_code","map","f","Number","_type","pid","drag","exist","source","filter","length","setState","setTimeout","console","warn","bool","hasUpdate","className","data-type","draggable","style","onClick","onFormationClick","onDoubleClick","e","renderFormation","Mercenary","params","_charName_TW","URL","data-tooltip","value","set","List","onStarChange","_label","stars","star","label","checked","onNameOptionsChange","nameOptions","nameOption","types","index","shape","color","animation","icon","onChange","_growType","_star","renderTypes","renderFilterStars","renderFilterNameOptions","renderCharacters","Toolbar","downloadSizeSelected","downloadSizeCustom","downloadSize","name","size","d","toPng","current","then","dataUrl","a","newDataUri","href","download","body","appendChild","click","removeChild","onUpdateOptions","defaultValue","onFocus","onDownloadClick","getCharacters","fetch","data","json","App","database","users","Boolean","window","location","hostname","match","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.557a4d41.chunk.js","sourcesContent":["import i18n from 'i18next';\nimport { initReactI18next } from \"react-i18next\";\nimport detector from \"i18next-browser-languagedetector\";\n\n// the translations\n// (tip move them in a JSON file and import them)\nimport translationEN from './locales/en.json';\nimport translationZHTW from './locales/zh-tw.json';\nimport translationZHCN from './locales/zh-cn.json';\n\nconst resources = {\n  en: { translation: translationEN },\n  zhTW: { translation: translationZHTW },\n  zhCN: { translation: translationZHCN },\n};\n\ni18n\n  .use(detector)\n  .use(initReactI18next) // passes i18n down to react-i18next\n  .init({\n    resources,\n    lng: 'en',\n\n    keySeparator: false, // we do not use keys in form messages.welcome\n\n    interpolation: {\n      escapeValue: false, // react already safes from xss\n    },\n  });\n\nexport default i18n;\n","const characters = (state = [], action) => {\n    switch (action.type) {\n        case 'SET_CHARACTERS':\n            return action.payload;\n        default:\n            return state;\n    }\n}\n\nexport default characters;\n","import Formation from '../models/Formation';\n\nconst initialState = {\n    formation: Formation,\n    options: {\n        type: true,\n        backcolor: true,\n        backimage: true,\n        order: true,\n    },\n    ref: null,\n};\n\nconst dataset = (state = initialState, action) => {\n    switch (action.type) {\n        case 'RESET_FORMATION':\n            return { ...state, ...action.payload };\n        case 'UPDATE_FORMATION':\n            return { ...state, ...action.payload };\n        default:\n            return state;\n    }\n}\n\nexport default dataset;\n","const Formation = [\n    { id: 'a1', top: '9px', left: '13px', type: 0, backgroundImage: null, code: null, dragOver: false },\n    { id: 'a2', top: '9px', left: '127.5px', type: 0, backgroundImage: null, code: null, dragOver: false },\n    { id: 'a3', top: '9px', left: '242px', type: 0, backgroundImage: null, code: null, dragOver: false },\n    { id: 'a4', top: '9px', left: '356px', type: 0, backgroundImage: null, code: null, dragOver: false },\n    { id: 'a5', top: '9px', left: '471px', type: 0, backgroundImage: null, code: null, dragOver: false },\n    { id: 'a6', top: '9px', left: '585.5px', type: 0, backgroundImage: null, code: null, dragOver: false },\n    { id: 'b1', top: '122.5px', left: '13px', type: 0, backgroundImage: null, code: null, dragOver: false },\n    { id: 'b2', top: '122.5px', left: '127.5px', type: 0, backgroundImage: null, code: null, dragOver: false },\n    { id: 'b3', top: '122.5px', left: '242px', type: 0, backgroundImage: null, code: null, dragOver: false },\n    { id: 'b4', top: '122.5px', left: '356px', type: 0, backgroundImage: null, code: null, dragOver: false },\n    { id: 'b5', top: '122.5px', left: '471px', type: 0, backgroundImage: null, code: null, dragOver: false },\n    { id: 'b6', top: '122.5px', left: '585.5px', type: 0, backgroundImage: null, code: null, dragOver: false },\n    { id: 'c1', top: '239px', left: '13px', type: 0, backgroundImage: null, code: null, dragOver: false },\n    { id: 'c2', top: '239px', left: '127.5px', type: 0, backgroundImage: null, code: null, dragOver: false },\n    { id: 'c3', top: '239px', left: '242px', type: 0, backgroundImage: null, code: null, dragOver: false },\n    { id: 'c4', top: '239px', left: '356px', type: 0, backgroundImage: null, code: null, dragOver: false },\n    { id: 'c5', top: '239px', left: '471px', type: 0, backgroundImage: null, code: null, dragOver: false },\n    { id: 'c6', top: '239px', left: '585.5px', type: 0, backgroundImage: null, code: null, dragOver: false },\n];\n\nexport default Formation;\n","import { combineReducers } from 'redux';\n// import settings from './settings';\nimport characters from './characters';\nimport dataset from './dataset';\n\nexport default combineReducers({\n  dataset,\n  characters,\n})\n","import React, { Component } from 'react';\nimport './Header.scss';\n\nimport { connect } from 'react-redux';\n\nclass Header extends Component {\n  render() {\n    return (\n      <header id=\"header\">\n        <center>\n          <h1>BROWNDUST <small>棕色塵埃 × 陣型分享</small></h1>\n        </center>\n      </header>\n    );\n  }\n}\n\nHeader.propTypes = {}\n\nconst mapStateToProps = state => {\n  return {\n  }\n}\n\nexport default connect(mapStateToProps)(Header);\n","import store from 'store2';\n\n/**\n * Set session\n * @param {string} key\n * @param {any} value\n */\nconst set = (key = '', value = null) => {\n  if (!key && !value) return;\n  store.session(key, value);\n}\n\n/**\n * Get session by key\n * @param {string} key\n */\nconst get = (key = '') => store.session(key);\n\n/**\n * Remove session by key\n * @param {string} key \n */\nconst del = (key = '') => store.session.remove(key);\n\nexport {\n  set,\n  get,\n  del,\n}\n","const APIUrl = 'https://browndust-global-api.pmang.cloud/book/getAllCharacters';\n\n// origin url, but cross-origin \bpermission\n// const thumbnailUrl = 'https://ic-common.pmang.cloud/static/bdt_book/thumbnail';\nconst thumbnailUrl = 'http://robby570.tw/browndust-share/resource/thumbnail';\n// const thumbnailUrl = '/resource/thumbnail';\n\nexport {\n    APIUrl,\n    thumbnailUrl,\n}","import { thumbnailUrl } from '../config/api';\n\nexport const getThumbnailUrlByImageName = (_uiIconImageName = '') => {\n    const id = _uiIconImageName.split('*')[1];\n    return `${thumbnailUrl}/${id}.png`;\n}\n\nexport const resizeImageURL = (datas, w = null, h = w / 2) => {\n    return new Promise((resolve) => {\n        const img = document.createElement('img');\n        img.onload = () => {\n            const canvas = document.createElement('canvas');\n            const ctx = canvas.getContext('2d');\n            if (w !== null) canvas.width = w;\n            if (h !== null) canvas.height = h;\n            ctx.drawImage(img, 0, 0, w, h);\n            const dataURI = canvas.toDataURL();\n            resolve(dataURI);\n        };\n        img.src = datas;\n        // img.crossOrigin = 'anonymous';\n        img.crossOrigin = 'use-credentials';\n        // document.body.appendChild(img);\n    });\n}\n","export const setLocal = payload => ({\n  type: 'SET_LOCALE',\n  locale: payload,\n});\n\nexport const setCharacters = payload => ({\n  type: 'SET_CHARACTERS',\n  payload,\n});\n\nexport const updateDataset = payload => ({\n  type: 'UPDATE_FORMATION',\n  payload,\n});\n\nexport const resetDataset = payload => ({\n  type: 'RESET_FORMATION',\n  payload,\n});\n\n// DEMO ===========================\n// let nextTodoId = 0\n// export const addTodo = text => ({\n//   type: 'ADD_TODO',\n//   id: nextTodoId++,\n//   text,\n// })\n\n// export const toggleTodo = id => ({\n//   type: 'TOGGLE_TODO',\n//   id,\n// })\n// DEMO ===========================\n","/* eslint-disable no-empty */\n/* eslint-disable no-underscore-dangle */\nimport React, { Component } from 'react';\nimport './Formation.scss';\n\nimport { connect } from 'react-redux';\n\nimport { get, del } from '../service/Session';\nimport { getThumbnailUrlByImageName } from '../utils';\nimport { updateDataset } from '../actions';\n\nclass Formation extends Component {\n  constructor(props) {\n    super(props);\n    this.props = props;\n    this.dispatch = props.dispatch;\n    this.state = {\n      alertID: null,\n      alertTimer: null,\n    }\n    this.myRef = React.createRef();\n  }\n\n  componentDidMount() {\n    this.dispatch(updateDataset({ ref: this.myRef }));\n  }\n\n  /**\n   * 新增圖片\n   * @param {*} tid target position id \n   * @param {*} cold character code\n   */\n  onAddImage(tid = null, code = null) {\n    // select character by _code\n    const c = this.characters.find(({ _code }) => _code === code);\n    // get formation state\n    if (code || c) {\n      // select target position id\n      this.formation = this.formation.map(f =>\n        f.id === tid ?\n          {\n            ...f,\n            backgroundImage: `url(${getThumbnailUrlByImageName(c._uiIconImageName)})`,\n            type: Number(c._type),\n            code: code,\n            dragOver: false,\n          } : f\n      )\n      this.dispatch(updateDataset({ formation: this.formation, ref: this.myRef }));\n    }\n  }\n\n  /**\n   * 刪除圖片\n   * @param {*} pid position id \n   * @param {*} cold character code\n   */\n  onRemoveImage(pid = null, code = null) {\n    const c = this.characters.find(({ _code }) => _code === code);\n    if (code || c) {\n      // Remove image from source\n      // select target position id\n      this.formation = this.formation.map(f =>\n        f.id === pid ?\n          {\n            ...f,\n            backgroundImage: null,\n            type: null,\n            code: null,\n            dragOver: false,\n          } : f\n      )\n      this.dispatch(updateDataset({ formation: this.formation }));\n    }\n  }\n\n  /**\n   * Check the target image is exist\n   * @param {*} drag drag or click mode\n   * @param {*} tid target id\n   * @param {*} sid source id\n   * @param {*} scode source code\n   */\n  onCheckExistImage(drag, tid, sid = null, scode) {\n    let exist = false;\n    const source = this.formation.filter(({ code }) => code === scode);\n    if (drag && sid === '0' && source.length > 0) {\n      exist = true; // drag mode\n    } else if (!drag && source.length > 0) {\n      exist = true; // click mode\n    }\n\n    if (exist) {\n      // add alarm style\n      this.setState({ alertID: source[0].id });\n      setTimeout(() => { this.setState({ alertID: null }) }, 1000);\n      // remove target style\n      this.onDragChangeStyle(tid, false);\n      del('_code');\n      console.warn('already have!');\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Dropover style\n   * @param {*} tid \n   */\n  onDragChangeStyle(tid = null, bool = true) {\n    let hasUpdate = false;\n    this.formation = this.formation.map(f => {\n      if (f.id === tid) {\n        // need update style [performance]\n        if (f.dragOver !== bool) hasUpdate = true;\n        return { ...f, dragOver: bool };\n      }\n      return f;\n    });\n    if (hasUpdate)\n      this.dispatch(updateDataset({ formation: this.formation }));\n  }\n\n  /**\n   * 座標編號\n   * @param {*} id \n   */\n  onFormationClick(id = null) {\n    const code = get('_code');\n    if (!code) return;\n    if (this.onCheckExistImage(false, id, null, code)) return;\n    this.onAddImage(id, code);\n    del('_code');\n  }\n\n  /**\n   * sid source position id\n   * scode source position image code\n   */\n  onDragStart = (ev, scode = null, sid = null) => {\n    ev.dataTransfer.setData('scode', scode);\n    ev.dataTransfer.setData('sid', sid);\n  }\n\n  onDragOver = (ev, tid = null) => {\n    ev.preventDefault();\n  }\n\n  onDragEnter = (ev, tid = null) => {\n    ev.preventDefault();\n    this.onDragChangeStyle(tid, true);\n  }\n\n  onDragLeave = (ev, tid = null) => {\n    ev.preventDefault();\n    this.onDragChangeStyle(tid, false);\n  }\n\n  /**\n   * tid target position id\n   */\n  onDrop = (ev, tid = null) => {\n    const sid = ev.dataTransfer.getData('sid');\n    const scode = ev.dataTransfer.getData('scode');\n    const target = this.formation.find(({ id }) => id === tid);\n    // check is exist\n    if (this.onCheckExistImage(true, tid, sid, scode)) return;\n    // check moving or exchanging \n    if (target.backgroundImage === null) {\n      // moving\n      // console.log('move');\n      this.onAddImage(tid, scode);\n      this.onRemoveImage(sid, scode);\n    } else {\n      // exchage\n      // console.log('exchage');\n      this.onAddImage(sid, target.code);\n      this.onAddImage(tid, scode);\n    }\n  }\n\n  /**\n   * 移動結束\n   */\n  onDragEnd = (ev, id, code) => {\n    ev.preventDefault();\n    // Plan: remove by drag to outside\n    // console.log(ev.target);\n    // console.log(ev.target.getAttribute('id'), id);\n    // console.log(ev.target.getAttribute('draggable'));\n\n    // const drag = ev.target.getAttribute('draggable');\n    // if (drag) {\n    //   console.log('remove')\n    //   this.onRemoveImage(id, code)\n    // };\n  }\n\n  renderFormation() {\n    return this.formation.map(({ id, top, left, type, backgroundImage, code, dragOver }) => {\n      return (\n        <div\n          key={`formation-${id}`}\n          className={`box ${dragOver ? 'over' : ''} ${this.state.alertID === id ? 'shake-hard shake-constant shake-constant--hover' : ''}`}\n          id={id}\n          data-type={type}\n          draggable={code ? true : false}\n          style={{ top, left, backgroundImage }}\n          onClick={() => this.onFormationClick(id)}\n          onDoubleClick={() => this.onRemoveImage(id, code)}\n          onDragStart={(e) => this.onDragStart(e, code, id)}\n          onDragOver={(e) => this.onDragOver(e, id)}\n          onDragEnter={(e) => this.onDragEnter(e, id)}\n          onDragLeave={(e) => this.onDragLeave(e, id)}\n          onDrop={(e) => { this.onDrop(e, id) }}\n          onDragEnd={(e) => this.onDragEnd(e, id, code)}\n        >\n          <div className='type' data-type={type}></div>\n        </div>\n      )\n    });\n  }\n\n  render() {\n    this.formation = this.props.dataset.formation;\n    const { type, backcolor, backimage, order } = this.props.dataset.options;\n    this.characters = this.props.characters;\n\n    return (\n      <div\n        ref={this.myRef}\n        id='formation'\n        className={\n          `formation \n        ${type ? '' : 'no-type'}\n        ${backcolor ? '' : 'no-backcolor'}\n        ${backimage ? '' : 'no-backimage'}\n        ${order ? '' : 'no-order'}\n        `\n        }\n      >\n        {this.renderFormation()}\n      </div>\n    );\n  }\n}\n\nFormation.propTypes = {}\n\nconst mapStateToProps = state => {\n  return {\n    characters: state.characters,\n    dataset: state.dataset,\n  }\n}\n\nexport default connect(mapStateToProps)(Formation);","/* eslint-disable camelcase */\n/* eslint-disable no-underscore-dangle */\nimport React, { Component } from 'react';\nimport './Mercenary.scss';\n\nimport { connect } from 'react-redux';\n\nimport { set } from '../service/Session';\nimport { getThumbnailUrlByImageName } from '../utils';\n\nclass Mercenary extends Component {\n  constructor(props) {\n    super(props);\n    this.props = props;\n    this.state = {\n    }\n  }\n\n  /**\n   * sid source position id\n   * scode source position image code\n   */\n  onDragStart = (ev, scode, sid) => {\n    ev.dataTransfer.setData('scode', scode);\n    ev.dataTransfer.setData('sid', sid);\n  }\n\n  render() {\n    const { _uiIconImageName, _charName_TW, _code } = this.props.params;\n    const URL = getThumbnailUrlByImageName(_uiIconImageName);\n    return (\n      <div\n        className='mercenary'\n        style={{ backgroundImage: `url(${URL})` }}\n        data-tooltip={_charName_TW}\n        draggable\n        onClick={() => set('_code', _code)}\n        onDragStart={(e) => this.onDragStart(e, _code, 0)}\n      >\n      </div>\n    );\n  }\n}\n\nMercenary.propTypes = {}\n\nconst mapStateToProps = state => {\n  return {\n  }\n}\n\nexport default connect(mapStateToProps)(Mercenary);\n","/* eslint-disable no-underscore-dangle */\n/* eslint-disable no-mixed-operators */\nimport React, { Component } from 'react';\nimport './List.scss';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Checkbox } from 'pretty-checkbox-react';\nimport { FaStar, FaEye } from \"react-icons/fa\";\n\nimport Mercenary from '../components/Mercenary';\n\nclass List extends Component {\n  constructor(props) {\n    super(props);\n    this.props = props;\n    this.state = {\n      type: 1,\n      types: [\n        { type: 1, style: 'attacker', label: '攻擊' },\n        { type: 2, style: 'defender', label: '防禦' },\n        { type: 3, style: 'magician', label: '魔法' },\n        { type: 4, style: 'supporter', label: '支援' },\n      ],\n      stars: [\n        { label: '5星', checked: true, star: 5 },\n        { label: '4星', checked: true, star: 4 },\n        { label: '3星', checked: false, star: 3 },\n        { label: '一般', checked: false, star: 2 },\n      ],\n      nameOptions: [\n        { label: '顯示', checked: true },\n        { label: '粗體', checked: false },\n      ],\n    };\n  }\n\n  onStarChange = (_label) => {\n    const stars = this.state.stars;\n    const star = stars.find(({ label }) => label === _label);\n    star.checked = !star.checked;\n    this.setState({ stars });\n  }\n\n  onNameOptionsChange = (_label) => {\n    const nameOptions = this.state.nameOptions;\n    const nameOption = nameOptions.find(({ label }) => label === _label);\n    nameOption.checked = !nameOption.checked;\n    this.setState({ nameOptions });\n  }\n\n  /**\n   * 渲染傭兵類型\n   */\n  renderTypes() {\n    return this.state.types.map(({ type, style, label }) =>\n      (\n        <button\n          key={`type-${label}`}\n          type='button'\n          className={`type ${style} ${type === this.state.type ? 'active' : ''}`}\n          onClick={() => this.setState({ type })}\n        >\n          <i></i>\n          <span>{label}</span>\n        </button>\n      ));\n  }\n\n  /**\n   * 渲染傭兵星級篩選功能\n   */\n  renderFilterStars() {\n    return this.state.stars.map(({ label, checked }, index) =>\n      (\n        <Checkbox\n          key={`start-${index}`}\n          shape='round'\n          color='info'\n          animation='jelly'\n          icon={<i className=\"mdi mdi-check\" />}\n          checked={checked}\n          onChange={() => this.onStarChange(label)}\n        >\n          {label}\n        </Checkbox>\n      ));\n  }\n\n  /**\n   * 渲染傭兵名稱呈現功能\n   */\n  renderFilterNameOptions() {\n    return this.state.nameOptions.map(({ label, checked }, index) => (\n      <Checkbox\n        key={`name-${index}`}\n        shape='round'\n        color='info'\n        animation='jelly'\n        icon={<i className=\"mdi mdi-check\" />}\n        checked={checked}\n        onChange={() => this.onNameOptionsChange(label)}\n      >\n        {label}\n      </Checkbox>\n    ));\n  }\n\n  /**\n   * 渲染傭兵列表\n   */\n  renderCharacters() {\n    return this.props.characters\n      .filter(({ _type, _growType, _star }) => {\n        return (\n          Number(_type) === this.state.type &&\n          Number(_growType) >= 0 &&\n          (\n            this.state.stars[0].checked && Number(_star) === 5 ||\n            this.state.stars[1].checked && Number(_star) === 4 ||\n            this.state.stars[2].checked && Number(_star) === 3 ||\n            this.state.stars[3].checked && Number(_star) === 2 ||\n            this.state.stars[3].checked && Number(_star) === 1\n          )\n        )\n      })\n      .map((c, index) => (\n        <Mercenary\n          key={`mercenary-${index}`}\n          params={c}\n          nameOptions={this.state.nameOptions}\n        />\n      ))\n  }\n\n  render() {\n    return (\n      <div className='list'>\n        <div className='types'>\n          {this.renderTypes()}\n        </div>\n        <div className='filter'>\n          <div className='star'>\n            <span className='filter-title'><FaStar /> 星級：</span>\n            {this.renderFilterStars()}\n          </div>\n          <div className='name'>\n            <span className='filter-title'><FaEye /> 名稱：</span>\n            {this.renderFilterNameOptions()}\n          </div>\n        </div>\n\n        <div className={`content\n          ${this.state.nameOptions[0].checked ? 'show' : ''} \n          ${this.state.nameOptions[1].checked ? 'bold' : ''}\n          `}\n        >\n          {this.renderCharacters()}\n        </div>\n      </div>\n    );\n  }\n}\n\nList.propTypes = {\n  characters: PropTypes.array.isRequired,\n}\n\nconst mapStateToProps = state => {\n  return {\n    characters: state.characters,\n  }\n}\n\nexport default connect(mapStateToProps)(List);\n","import React, { Component } from 'react';\nimport './Toolbar.scss';\n\nimport { connect } from 'react-redux';\nimport { MdRefresh, MdCloudDownload } from 'react-icons/md';\nimport { Checkbox, Radio } from 'pretty-checkbox-react';\nimport { toPng } from 'html-to-image';\n\nimport { updateDataset } from '../actions';\nimport { resizeImageURL } from '../utils';\n\nclass Toolbar extends Component {\n  constructor(props) {\n    super(props);\n    this.dispatch = props.dispatch;\n    this.state = {\n      downloadSizeSelected: 2,\n      downloadSizeCustom: null,\n      downloadSize: [\n        { value: 1, name: 700 },\n        { value: 2, name: 520 },\n        { value: 3, name: 420 },\n        { value: 4, name: '自訂寬度' },\n      ],\n    };\n  }\n\n  onUpdateOptions(payload) {\n    const options = { ...this.options, ...payload };\n    this.dispatch(updateDataset({ options }));\n  }\n\n  onDownloadClick() {\n    const size = this.state.downloadSizeSelected !== 4 ? this.state.downloadSize\n      .find(d => d.value === this.state.downloadSizeSelected).name\n      : Number(this.state.downloadSizeCustom);\n\n    if (size <= 0) return;\n    toPng(this.props.dataset.ref.current)\n      .then(async dataUrl => {\n        const newDataUri = await resizeImageURL(dataUrl, size);\n        const a = document.createElement('a');\n        a.href = newDataUri;\n        a.download = 'html-output.png';\n        document.body.appendChild(a);\n        a.click();\n        document.body.removeChild(a);\n      });\n  }\n\n  render() {\n    this.options = this.props.dataset.options;\n    return (\n      <div className='toolbar'>\n        <div className='options'>\n          顯示內容：\n          <Checkbox\n            shape='round'\n            color='info'\n            animation='jelly'\n            icon={<i className=\"mdi mdi-check\" />}\n            checked={this.options.type}\n            onChange={e => this.onUpdateOptions({ type: e.target.checked })}\n          >\n            傭兵類型\n          </Checkbox>\n          <Checkbox\n            shape='round'\n            color='info'\n            animation='jelly'\n            icon={<i className=\"mdi mdi-check\" />}\n            checked={this.options.order}\n            onChange={e => this.onUpdateOptions({ order: e.target.checked })}\n          >\n            出手順序\n          </Checkbox>\n          <Checkbox\n            shape='round'\n            color='info'\n            animation='jelly'\n            icon={<i className=\"mdi mdi-check\" />}\n            checked={this.options.backcolor}\n            onChange={e => this.onUpdateOptions({ backcolor: e.target.checked })}\n          >\n            背景顏色\n          </Checkbox>\n          <Checkbox\n            shape='round'\n            color='info'\n            animation='jelly'\n            icon={<i className=\"mdi mdi-check\" />}\n            checked={this.options.backimage}\n            onChange={e => this.onUpdateOptions({ backimage: e.target.checked })}\n          >\n            背景方格\n          </Checkbox>\n        </div>\n\n        <div className='options'>\n          圖片寬度：\n          {\n            this.state.downloadSize.map(({ value, name }) => {\n              return (\n                <Radio\n                  key={`download-szie-${value}`}\n                  name='download-size'\n                  shape='round'\n                  color='info'\n                  animation='jelly'\n                  icon={<i className=\"mdi mdi-check\" />}\n                  value={value}\n                  checked={value === this.state.downloadSizeSelected}\n                  onChange={() => this.setState({ downloadSizeSelected: value })}\n                >\n                  {value !== 4 ? `${name}px` : name}\n                </Radio>\n              );\n            })\n          }\n          <input\n            className='download-size-custom'\n            defaultValue={this.state.downloadSizeCustom}\n            onChange={(e) => this.setState({ downloadSizeCustom: e.target.value })}\n            onFocus={() => this.setState({ downloadSizeSelected: 4 })}\n          />\n        </div>\n\n        <div className='commands'>\n          <button\n            type='button'\n            className='tool attacker'\n            onClick={() => {\n              const formation = this.props.dataset.formation.map(f => ({ ...f, type: 0, backgroundImage: null, code: null, dragOver: false }));\n              this.dispatch(updateDataset({ formation }));\n            }}\n          >\n            <MdRefresh size='2em' color='#fff' />\n            <span>重置</span>\n          </button>\n          <button\n            type='button'\n            className='tool attacker'\n            onClick={() => this.onDownloadClick()}\n          >\n            <MdCloudDownload size='2em' color='#fff' />\n            <span>下載</span>\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nToolbar.propTypes = {}\n\nconst mapStateToProps = state => {\n  return {\n    dataset: state.dataset,\n  }\n}\n\nexport default connect(mapStateToProps)(Toolbar);\n","import { APIUrl } from '../config/api';\n\nconst getCharacters = async () => fetch(APIUrl).then(data => data.json() || [])\n\nexport { getCharacters };\n","import React, { Component } from 'react';\nimport './App.scss';\n\n// import { Switch, BrowserRouter as Router, Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport Header from './container/Header';\nimport Formation from './container/Formation';\nimport List from './container/List';\nimport Toolbar from './container/Toolbar';\n\nimport { setCharacters } from './actions';\nimport { getCharacters } from './service/Characters';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.dispatch = props.dispatch;\n  }\n\n  componentDidMount() {\n    getCharacters().then(data => this.dispatch(setCharacters(data)));\n  }\n\n  render() {\n    this.database = this.props.database;\n    this.users = this.props.users;\n    return (\n      <div id='wrapper'>\n        <Header />\n        <section id='container'>\n          <div className='main'>\n            <Formation />\n            <Toolbar />\n          </div>\n          <List />\n        </section>\n      </div>\n    );\n  }\n}\n\nApp.propTypes = {}\n\nconst mapStateToProps = state => {\n  return {\n    characters: state.characters,\n  }\n}\n\nexport default connect(mapStateToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport './index.scss';\nimport './i18n';\nimport reducers from './reducers';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = createStore(\n  reducers,\n  applyMiddleware(thunk)\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}