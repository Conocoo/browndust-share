{"version":3,"sources":["i18n.js","reducers/characters.js","reducers/dataset.js","models/Formation.js","reducers/index.js","container/Header.js","service/Session.js","config/api.js","utils/index.js","actions/index.js","container/Formation.js","components/Mercenary.js","container/List.js","container/Toolbar.js","service/Characters.js","App.js","serviceWorker.js","index.js"],"names":["resources","en","translation","zhTW","zhCN","i18n","use","detector","initReactI18next","init","lng","keySeparator","interpolation","escapeValue","characters","state","action","type","payload","initialState","formation","id","top","left","backgroundImage","code","dragOver","queue","options","backcolor","backimage","ref","queueMode","queueMax","dataset","combineReducers","Header","Component","connect","get","key","store","session","del","remove","thumbnailUrl","getThumbnailUrlByImageName","_uiIconImageName","split","resizeImageURL","datas","w","h","Promise","resolve","img","document","createElement","onload","canvas","ctx","getContext","width","height","drawImage","dataURI","toDataURL","src","crossOrigin","updateDataset","Formation","props","onDragStart","ev","scode","sid","dataTransfer","setData","onDragOver","preventDefault","onDragEnter","tid","onDragChangeStyle","onDragLeave","onDrop","getData","target","find","onCheckExistImage","onAddImage","onRemoveImage","onDragEnd","dispatch","alertID","alertTimer","myRef","React","createRef","this","c","_code","fsource","f","map","Number","_type","pid","drag","exist","source","filter","length","setState","setTimeout","console","log","bool","hasUpdate","q","push","typeShow","queueShow","className","data-type","draggable","style","onClick","onFormationClick","onDoubleClick","e","renderFormation","Mercenary","params","_charName_TW","URL","data-tooltip","value","set","override","css","List","onStarChange","_label","stars","star","label","checked","onNameOptionsChange","nameOptions","nameOption","types","index","shape","color","animation","icon","onChange","_growType","_star","renderTypes","renderFilterStars","renderFilterNameOptions","size","renderCharacters","Toolbar","downloadSizeSelected","downloadSizeCustom","downloadSize","name","d","toPng","current","then","dataUrl","a","newDataUri","href","download","body","appendChild","click","removeChild","onUpdateOptions","min","max","replace","onFocus","onQueueClick","onDownloadClick","getCharacters","fetch","data","json","App","database","users","Boolean","window","location","hostname","match","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.99064c03.chunk.js","sourcesContent":["import i18n from 'i18next';\nimport { initReactI18next } from \"react-i18next\";\nimport detector from \"i18next-browser-languagedetector\";\n\n// the translations\n// (tip move them in a JSON file and import them)\nimport translationEN from './locales/en.json';\nimport translationZHTW from './locales/zh-tw.json';\nimport translationZHCN from './locales/zh-cn.json';\n\nconst resources = {\n  en: { translation: translationEN },\n  zhTW: { translation: translationZHTW },\n  zhCN: { translation: translationZHCN },\n};\n\ni18n\n  .use(detector)\n  .use(initReactI18next) // passes i18n down to react-i18next\n  .init({\n    resources,\n    lng: 'en',\n\n    keySeparator: false, // we do not use keys in form messages.welcome\n\n    interpolation: {\n      escapeValue: false, // react already safes from xss\n    },\n  });\n\nexport default i18n;\n","const characters = (state = [], action) => {\n    switch (action.type) {\n        case 'SET_CHARACTERS':\n            return action.payload;\n        default:\n            return state;\n    }\n}\n\nexport default characters;\n","import Formation from '../models/Formation';\n\nconst initialState = {\n    formation: Formation,\n    options: {\n        type: true,\n        backcolor: true,\n        backimage: true,\n        queue: true,\n    },\n    ref: null,\n    queueMode: false,\n    queueMax: 9,\n    queue: [],\n};\n\nconst dataset = (state = initialState, action) => {\n    switch (action.type) {\n        case 'RESET_FORMATION':\n            return { ...state, ...action.payload };\n        case 'UPDATE_FORMATION':\n            return { ...state, ...action.payload };\n        default:\n            return state;\n    }\n}\n\nexport default dataset;\n","const Formation = [\n    { id: 'a1', top: '9px', left: '13px', type: 0, backgroundImage: null, code: null, dragOver: false, queue: 0 },\n    { id: 'a2', top: '9px', left: '127.5px', type: 0, backgroundImage: null, code: null, dragOver: false, queue: 0 },\n    { id: 'a3', top: '9px', left: '242px', type: 0, backgroundImage: null, code: null, dragOver: false, queue: 0 },\n    { id: 'a4', top: '9px', left: '356px', type: 0, backgroundImage: null, code: null, dragOver: false, queue: 0 },\n    { id: 'a5', top: '9px', left: '471px', type: 0, backgroundImage: null, code: null, dragOver: false, queue: 0 },\n    { id: 'a6', top: '9px', left: '585.5px', type: 0, backgroundImage: null, code: null, dragOver: false, queue: 0 },\n    { id: 'b1', top: '122.5px', left: '13px', type: 0, backgroundImage: null, code: null, dragOver: false, queue: 0 },\n    { id: 'b2', top: '122.5px', left: '127.5px', type: 0, backgroundImage: null, code: null, dragOver: false, queue: 0 },\n    { id: 'b3', top: '122.5px', left: '242px', type: 0, backgroundImage: null, code: null, dragOver: false, queue: 0 },\n    { id: 'b4', top: '122.5px', left: '356px', type: 0, backgroundImage: null, code: null, dragOver: false, queue: 0 },\n    { id: 'b5', top: '122.5px', left: '471px', type: 0, backgroundImage: null, code: null, dragOver: false, queue: 0 },\n    { id: 'b6', top: '122.5px', left: '585.5px', type: 0, backgroundImage: null, code: null, dragOver: false, queue: 0 },\n    { id: 'c1', top: '239px', left: '13px', type: 0, backgroundImage: null, code: null, dragOver: false, queue: 0 },\n    { id: 'c2', top: '239px', left: '127.5px', type: 0, backgroundImage: null, code: null, dragOver: false, queue: 0 },\n    { id: 'c3', top: '239px', left: '242px', type: 0, backgroundImage: null, code: null, dragOver: false, queue: 0 },\n    { id: 'c4', top: '239px', left: '356px', type: 0, backgroundImage: null, code: null, dragOver: false, queue: 0 },\n    { id: 'c5', top: '239px', left: '471px', type: 0, backgroundImage: null, code: null, dragOver: false, queue: 0 },\n    { id: 'c6', top: '239px', left: '585.5px', type: 0, backgroundImage: null, code: null, dragOver: false, queue: 0 },\n];\n\nexport default Formation;\n","import { combineReducers } from 'redux';\n// import settings from './settings';\nimport characters from './characters';\nimport dataset from './dataset';\n\nexport default combineReducers({\n  dataset,\n  characters,\n})\n","import React, { Component } from 'react';\nimport './Header.scss';\n\nimport { connect } from 'react-redux';\n\nclass Header extends Component {\n  render() {\n    return (\n      <header id=\"header\">\n        <center>\n          <h1>BROWNDUST <small>棕色塵埃 × 陣型分享</small></h1>\n        </center>\n      </header>\n    );\n  }\n}\n\nHeader.propTypes = {}\n\nconst mapStateToProps = state => {\n  return {\n  }\n}\n\nexport default connect(mapStateToProps)(Header);\n","import store from 'store2';\n\n/**\n * Set session\n * @param {string} key\n * @param {any} value\n */\nconst set = (key = '', value = null) => {\n  if (!key && !value) return;\n  store.session(key, value);\n}\n\n/**\n * Get session by key\n * @param {string} key\n */\nconst get = (key = '') => store.session(key);\n\n/**\n * Remove session by key\n * @param {string} key \n */\nconst del = (key = '') => store.session.remove(key);\n\nexport {\n  set,\n  get,\n  del,\n}\n","const APIUrl = 'https://browndust-global-api.pmang.cloud/book/getAllCharacters';\n\n// origin url, but cross-origin \bpermission\n// const thumbnailUrl = 'https://ic-common.pmang.cloud/static/bdt_book/thumbnail';\nconst thumbnailUrl = 'http://robby570.tw/browndust-share/resource/thumbnail';\n// const thumbnailUrl = '/resource/thumbnail';\n\nexport {\n    APIUrl,\n    thumbnailUrl,\n}","import { thumbnailUrl } from '../config/api';\n\nexport const getThumbnailUrlByImageName = (_uiIconImageName = '') => {\n    const id = _uiIconImageName.split('*')[1];\n    return `${thumbnailUrl}/${id}.png`;\n}\n\nexport const resizeImageURL = (datas, w = null, h = w / 2) => {\n    return new Promise((resolve) => {\n        const img = document.createElement('img');\n        img.onload = () => {\n            const canvas = document.createElement('canvas');\n            const ctx = canvas.getContext('2d');\n            if (w !== null) canvas.width = w;\n            if (h !== null) canvas.height = h;\n            ctx.drawImage(img, 0, 0, w, h);\n            const dataURI = canvas.toDataURL();\n            resolve(dataURI);\n        };\n        img.src = datas;\n        // img.crossOrigin = 'anonymous';\n        img.crossOrigin = 'use-credentials';\n        // document.body.appendChild(img);\n    });\n}\n","export const setLocal = payload => ({\n  type: 'SET_LOCALE',\n  locale: payload,\n});\n\nexport const setCharacters = payload => ({\n  type: 'SET_CHARACTERS',\n  payload,\n});\n\nexport const updateDataset = payload => ({\n  type: 'UPDATE_FORMATION',\n  payload,\n});\n\nexport const resetDataset = payload => ({\n  type: 'RESET_FORMATION',\n  payload,\n});\n\n// DEMO ===========================\n// let nextTodoId = 0\n// export const addTodo = text => ({\n//   type: 'ADD_TODO',\n//   id: nextTodoId++,\n//   text,\n// })\n\n// export const toggleTodo = id => ({\n//   type: 'TOGGLE_TODO',\n//   id,\n// })\n// DEMO ===========================\n","/* eslint-disable no-empty */\n/* eslint-disable no-underscore-dangle */\nimport React, { Component } from 'react';\nimport './Formation.scss';\n\nimport { connect } from 'react-redux';\n\nimport { get, del } from '../service/Session';\nimport { getThumbnailUrlByImageName } from '../utils';\nimport { updateDataset } from '../actions';\n\nclass Formation extends Component {\n  constructor(props) {\n    super(props);\n    this.props = props;\n    this.dispatch = props.dispatch;\n    this.state = {\n      alertID: null,\n      alertTimer: null,\n    }\n    this.myRef = React.createRef();\n  }\n\n  componentDidMount() {\n    this.dispatch(updateDataset({ ref: this.myRef }));\n  }\n\n  /**\n   * 新增圖片\n   * @param {*} tid target position id \n   * @param {*} cold character code\n   */\n  onAddImage(tid = null, code = null) {\n    // select character by _code\n    const c = this.characters.find(({ _code }) => _code === code);\n    // get formation state\n    if (code || c) {\n      // select target position id\n      const fsource = this.formation.find(f => f.code === code);\n      this.formation = this.formation.map(f => {\n        let payload;\n\n        if (f.id === tid) {\n          payload = {\n            ...f,\n            backgroundImage: `url(${getThumbnailUrlByImageName(c._uiIconImageName)})`,\n            type: Number(c._type),\n            code: code,\n            dragOver: false,\n          }\n          if (fsource) {\n            // move to new position, then copy source queue\n            if (f.queue === 0 && fsource.queue > 0) {\n              payload = {\n                ...payload,\n                queue: fsource.queue,\n              }\n            } else {\n              payload = {\n                ...payload,\n                queue: f.queue,\n              }\n            }\n            // payload = { ...payload, ...fsource.queue }\n            // queue: fsource ? fsource.queue : f.queue,\n          }\n        } else {\n          payload = f;\n        }\n        return payload;\n      });\n      this.dispatch(updateDataset({ formation: this.formation, ref: this.myRef }));\n    }\n  }\n\n  /**\n   * 刪除圖片\n   * @param {*} pid position id \n   * @param {*} cold character code\n   */\n  onRemoveImage(pid = null, code = null) {\n    const c = this.characters.find(({ _code }) => _code === code);\n    if (code || c) {\n      // Remove image from source\n      // select target position id\n      this.formation = this.formation.map(f =>\n        f.id === pid ?\n          {\n            ...f,\n            backgroundImage: null,\n            type: null,\n            code: null,\n            dragOver: false,\n            queue: 0,\n          } : f\n      )\n      this.dispatch(updateDataset({ formation: this.formation }));\n    }\n  }\n\n  /**\n   * Check the target image is exist\n   * @param {*} drag drag or click mode\n   * @param {*} tid target id\n   * @param {*} sid source id\n   * @param {*} scode source code\n   */\n  onCheckExistImage(drag, tid, sid = null, scode) {\n    let exist = false;\n    const source = this.formation.filter(({ code }) => code === scode);\n    if (drag && sid === '0' && source.length > 0) {\n      exist = true; // drag mode\n    } else if (!drag && source.length > 0) {\n      exist = true; // click mode\n    }\n\n    if (exist) {\n      // add alarm style\n      this.setState({ alertID: source[0].id });\n      setTimeout(() => { this.setState({ alertID: null }) }, 1000);\n      // remove target style\n      this.onDragChangeStyle(tid, false);\n      del('_code');\n      console.log('already have!');\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Dropover style\n   * @param {*} tid \n   */\n  onDragChangeStyle(tid = null, bool = true) {\n    let hasUpdate = false;\n    this.formation = this.formation.map(f => {\n      if (f.id === tid) {\n        // need update style [performance]\n        if (f.dragOver !== bool) hasUpdate = true;\n        return { ...f, dragOver: bool };\n      }\n      return f;\n    });\n    if (hasUpdate)\n      this.dispatch(updateDataset({ formation: this.formation }));\n  }\n\n  /**\n   * 新增傭兵或是編輯順序\n   * @param {*} id \n   */\n  onFormationClick(id = null) {\n    const { queue, queueMode, queueMax } = this.props.dataset;\n\n    const formation = this.formation.find(f => f.id === id);\n    // set queue\n    if (queueMode && formation) {\n      // check is character inside\n      if (\n        formation.code !== null &&                // check data exist\n        formation.backgroundImage !== null &&     // check data exist\n        queue.filter(q => q === id).length === 0  // can not repeat id\n      ) {\n        queue.push(id);\n        this.formation = this.formation.map(f => {\n          if (f.id === id) return { ...f, queue: queue.length };\n          return f;\n        });\n        const payload = queue.length === queueMax\n          ? { formation: this.formation, queue, queueMode: false } : { formation: this.formation, queue };\n        this.dispatch(updateDataset(payload))\n      }\n    } else {\n      // add character\n      const code = get('_code');\n      if (!code) return;\n      if (this.onCheckExistImage(false, id, null, code)) return;\n      this.onAddImage(id, code);\n      del('_code');\n    }\n  }\n\n  /**\n   * sid source position id\n   * scode source position image code\n   */\n  onDragStart = (ev, scode = null, sid = null) => {\n    ev.dataTransfer.setData('scode', scode);\n    ev.dataTransfer.setData('sid', sid);\n  }\n\n  onDragOver = (ev, tid = null) => {\n    ev.preventDefault();\n  }\n\n  onDragEnter = (ev, tid = null) => {\n    ev.preventDefault();\n    this.onDragChangeStyle(tid, true);\n  }\n\n  onDragLeave = (ev, tid = null) => {\n    ev.preventDefault();\n    this.onDragChangeStyle(tid, false);\n  }\n\n  /**\n   * tid target position id\n   */\n  onDrop = (ev, tid = null) => {\n    const sid = ev.dataTransfer.getData('sid');\n    const scode = ev.dataTransfer.getData('scode');\n    const target = this.formation.find(({ id }) => id === tid);\n    // check is exist\n    if (this.onCheckExistImage(true, tid, sid, scode)) return;\n    // check moving or exchanging \n    if (target.backgroundImage === null) {\n      // moving\n      // console.log('move');\n      this.onAddImage(tid, scode);\n      this.onRemoveImage(sid, scode);\n    } else {\n      // exchage\n      // console.log('exchage');\n      this.onAddImage(sid, target.code);\n      this.onAddImage(tid, scode);\n    }\n  }\n\n  /**\n   * 移動結束\n   */\n  onDragEnd = (ev, id, code) => {\n    ev.preventDefault();\n    // Plan: remove by drag to outside\n    // console.log(ev.target);\n    // console.log(ev.target.getAttribute('id'), id);\n    // console.log(ev.target.getAttribute('draggable'));\n\n    // const drag = ev.target.getAttribute('draggable');\n    // if (drag) {\n    //   console.log('remove')\n    //   this.onRemoveImage(id, code)\n    // };\n  }\n\n  renderFormation(typeShow, queueShow) {\n    return this.formation.map(({ id, top, left, type, backgroundImage, code, dragOver, queue }) => {\n      return (\n        <div\n          key={`formation-${id}`}\n          className={`box ${dragOver ? 'over' : ''} ${this.state.alertID === id ? 'shake-hard shake-constant shake-constant--hover' : ''}`}\n          id={id}\n          data-type={type}\n          draggable={code ? true : false}\n          style={{ top, left, backgroundImage }}\n          onClick={() => this.onFormationClick(id)}\n          onDoubleClick={() => this.onRemoveImage(id, code)}\n          onDragStart={(e) => this.onDragStart(e, code, id)}\n          onDragOver={(e) => this.onDragOver(e, id)}\n          onDragEnter={(e) => this.onDragEnter(e, id)}\n          onDragLeave={(e) => this.onDragLeave(e, id)}\n          onDrop={(e) => { this.onDrop(e, id) }}\n          onDragEnd={(e) => this.onDragEnd(e, id, code)}\n        >\n          {typeShow ? <div className='type' data-type={type}></div> : null}\n          {queueShow && queue > 0 ? <div className='queue'>{queue}</div> : null}\n        </div>\n      )\n    });\n  }\n\n  render() {\n    this.formation = this.props.dataset.formation;\n    const { type, backcolor, backimage, queue } = this.props.dataset.options;\n    this.characters = this.props.characters;\n\n    return (\n      <div\n        ref={this.myRef}\n        id='formation'\n        className={\n          `formation \n        ${type ? '' : 'no-type'}\n        ${backcolor ? '' : 'no-backcolor'}\n        ${backimage ? '' : 'no-backimage'}\n        ${queue ? '' : 'no-queue'}\n        `\n        }\n      >\n        {this.renderFormation(type, queue)}\n      </div>\n    );\n  }\n}\n\nFormation.propTypes = {}\n\nconst mapStateToProps = state => {\n  return {\n    characters: state.characters,\n    dataset: state.dataset,\n  }\n}\n\nexport default connect(mapStateToProps)(Formation);","/* eslint-disable camelcase */\n/* eslint-disable no-underscore-dangle */\nimport React, { Component } from 'react';\nimport './Mercenary.scss';\n\nimport { connect } from 'react-redux';\n\nimport { set } from '../service/Session';\nimport { getThumbnailUrlByImageName } from '../utils';\n\nclass Mercenary extends Component {\n  constructor(props) {\n    super(props);\n    this.props = props;\n    this.state = {\n    }\n  }\n\n  /**\n   * sid source position id\n   * scode source position image code\n   */\n  onDragStart = (ev, scode, sid) => {\n    ev.dataTransfer.setData('scode', scode);\n    ev.dataTransfer.setData('sid', sid);\n  }\n\n  render() {\n    const { _uiIconImageName, _charName_TW, _code } = this.props.params;\n    const URL = getThumbnailUrlByImageName(_uiIconImageName);\n    return (\n      <div\n        className='mercenary'\n        style={{ backgroundImage: `url(${URL})` }}\n        data-tooltip={_charName_TW}\n        draggable\n        onClick={() => set('_code', _code)}\n        onDragStart={(e) => this.onDragStart(e, _code, 0)}\n      >\n      </div>\n    );\n  }\n}\n\nMercenary.propTypes = {}\n\nconst mapStateToProps = state => {\n  return {\n  }\n}\n\nexport default connect(mapStateToProps)(Mercenary);\n","/* eslint-disable no-underscore-dangle */\n/* eslint-disable no-mixed-operators */\nimport React, { Component } from 'react';\nimport './List.scss';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Checkbox } from 'pretty-checkbox-react';\nimport { FaStar } from \"react-icons/fa\";\nimport { css } from '@emotion/core';\nimport HashLoader from 'react-spinners/HashLoader';\n\nimport Mercenary from '../components/Mercenary';\n\nconst override = css`\n    display: block;\n    margin: 20vh auto 0;\n`;\n\nclass List extends Component {\n  constructor(props) {\n    super(props);\n    this.props = props;\n    this.state = {\n      type: 1,\n      types: [\n        { type: 1, style: 'attacker', label: '攻擊' },\n        { type: 2, style: 'defender', label: '防禦' },\n        { type: 3, style: 'magician', label: '魔法' },\n        { type: 4, style: 'supporter', label: '支援' },\n      ],\n      stars: [\n        { label: '5星', checked: true, star: 5 },\n        { label: '4星', checked: true, star: 4 },\n        { label: '3星', checked: false, star: 3 },\n        { label: '一般', checked: false, star: 2 },\n      ],\n      nameOptions: [\n        { label: '顯示', checked: true },\n        { label: '粗體', checked: false },\n      ],\n    };\n  }\n\n  onStarChange = (_label) => {\n    const stars = this.state.stars;\n    const star = stars.find(({ label }) => label === _label);\n    star.checked = !star.checked;\n    this.setState({ stars });\n  }\n\n  onNameOptionsChange = (_label) => {\n    const nameOptions = this.state.nameOptions;\n    const nameOption = nameOptions.find(({ label }) => label === _label);\n    nameOption.checked = !nameOption.checked;\n    this.setState({ nameOptions });\n  }\n\n  /**\n   * 渲染傭兵類型\n   */\n  renderTypes() {\n    return this.state.types.map(({ type, style, label }) =>\n      (\n        <button\n          key={`type-${label}`}\n          type='button'\n          className={`type ${style} ${type === this.state.type ? 'active' : ''}`}\n          onClick={() => this.setState({ type })}\n        >\n          <i></i>\n          <span>{label}</span>\n        </button>\n      ));\n  }\n\n  /**\n   * 渲染傭兵星級篩選功能\n   */\n  renderFilterStars() {\n    return this.state.stars.map(({ label, checked }, index) =>\n      (\n        <Checkbox\n          key={`start-${index}`}\n          shape='round'\n          color='info'\n          animation='jelly'\n          icon={<i className=\"mdi mdi-check\" />}\n          checked={checked}\n          onChange={() => this.onStarChange(label)}\n        >\n          {label}\n        </Checkbox>\n      ));\n  }\n\n  /**\n   * 渲染傭兵名稱呈現功能\n   */\n  renderFilterNameOptions() {\n    return this.state.nameOptions.map(({ label, checked }, index) => (\n      <Checkbox\n        key={`name-${index}`}\n        shape='round'\n        color='info'\n        animation='jelly'\n        icon={<i className=\"mdi mdi-check\" />}\n        checked={checked}\n        onChange={() => this.onNameOptionsChange(label)}\n      >\n        {label}\n      </Checkbox>\n    ));\n  }\n\n  /**\n   * 渲染傭兵列表\n   */\n  renderCharacters() {\n    return this.props.characters\n      .filter(({ _type, _growType, _star }) => {\n        return (\n          Number(_type) === this.state.type &&\n          Number(_growType) >= 0 &&\n          (\n            this.state.stars[0].checked && Number(_star) === 5 ||\n            this.state.stars[1].checked && Number(_star) === 4 ||\n            this.state.stars[2].checked && Number(_star) === 3 ||\n            this.state.stars[3].checked && Number(_star) === 2 ||\n            this.state.stars[3].checked && Number(_star) === 1\n          )\n        )\n      })\n      .map((c, index) => (\n        <Mercenary\n          key={`mercenary-${index}`}\n          params={c}\n          nameOptions={this.state.nameOptions}\n        />\n      ))\n  }\n\n  render() {\n    return (\n      <div className='list'>\n        <div className='types'>\n          {this.renderTypes()}\n        </div>\n        <div className='filter'>\n          <div className='star'>\n            <span className='filter-title'><FaStar /> 星級：</span>\n            {this.renderFilterStars()}\n          </div>\n          <div className='name'>\n            <span className='filter-title'>名稱：</span>\n            {this.renderFilterNameOptions()}\n          </div>\n        </div>\n\n        <div className={`content\n          ${this.state.nameOptions[0].checked ? 'show' : ''} \n          ${this.state.nameOptions[1].checked ? 'bold' : ''}\n          `}\n        >\n          {\n            this.props.characters.length === 0 ? (\n              <HashLoader\n                css={override}\n                color={'#5ac0de'}\n                size={100}\n              />\n            ) : this.renderCharacters()\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\nList.propTypes = {\n  characters: PropTypes.array.isRequired,\n}\n\nconst mapStateToProps = state => {\n  return {\n    characters: state.characters,\n  }\n}\n\nexport default connect(mapStateToProps)(List);\n","import React, { Component } from 'react';\nimport './Toolbar.scss';\n\nimport { connect } from 'react-redux';\nimport { MdRefresh, MdGetApp } from 'react-icons/md';\nimport { GiPerspectiveDiceSixFacesRandom, GiPerspectiveDiceOne } from 'react-icons/gi';\nimport { Checkbox, Radio } from 'pretty-checkbox-react';\nimport { toPng } from 'html-to-image';\n\nimport { updateDataset } from '../actions';\nimport { resizeImageURL } from '../utils';\n\nclass Toolbar extends Component {\n  constructor(props) {\n    super(props);\n    this.dispatch = props.dispatch;\n    this.state = {\n      downloadSizeSelected: 2,\n      downloadSizeCustom: 0,\n      downloadSize: [\n        { value: 1, name: 700 },\n        { value: 2, name: 520 },\n        { value: 3, name: 420 },\n        { value: 4, name: '自訂寬度：' },\n      ],\n    };\n  }\n\n  onUpdateOptions(payload) {\n    const options = { ...this.options, ...payload };\n    this.dispatch(updateDataset({ options }));\n  }\n\n  onQueueClick(queueMode) {\n    let payload = {};\n    if (queueMode) {\n      // turn off queue mode\n      payload = { queueMode: !queueMode, queue: [] };\n    } else {\n      // turn on queue mode\n      payload = { queueMode: !queueMode };\n    }\n\n    this.dispatch(updateDataset(payload));\n  }\n\n  onDownloadClick() {\n    const size = this.state.downloadSizeSelected !== 4 ? this.state.downloadSize\n      .find(d => d.value === this.state.downloadSizeSelected).name\n      : Number(this.state.downloadSizeCustom);\n\n    if (Number(size) <= 0) return;\n    toPng(this.props.dataset.ref.current)\n      .then(async dataUrl => {\n        const newDataUri = await resizeImageURL(dataUrl, size);\n        const a = document.createElement('a');\n        a.href = newDataUri;\n        a.download = 'html-output.png';\n        document.body.appendChild(a);\n        a.click();\n        document.body.removeChild(a);\n      });\n  }\n\n  render() {\n    this.formation = this.props.dataset.formation;\n    this.options = this.props.dataset.options;\n    const { queueMode, queue } = this.props.dataset;\n    return (\n      <div className='toolbar'>\n        <div className='options'>\n          顯示內容：\n          <Checkbox\n            shape='round'\n            color='info'\n            animation='jelly'\n            icon={<i className=\"mdi mdi-check\" />}\n            checked={this.options.type}\n            onChange={e => this.onUpdateOptions({ type: e.target.checked })}\n          >\n            傭兵類型\n          </Checkbox>\n          <Checkbox\n            shape='round'\n            color='info'\n            animation='jelly'\n            icon={<i className=\"mdi mdi-check\" />}\n            checked={this.options.queue}\n            onChange={e => this.onUpdateOptions({ queue: e.target.checked })}\n          >\n            出手順序\n          </Checkbox>\n          <Checkbox\n            shape='round'\n            color='info'\n            animation='jelly'\n            icon={<i className=\"mdi mdi-check\" />}\n            checked={this.options.backcolor}\n            onChange={e => this.onUpdateOptions({ backcolor: e.target.checked })}\n          >\n            背景顏色\n          </Checkbox>\n          <Checkbox\n            shape='round'\n            color='info'\n            animation='jelly'\n            icon={<i className=\"mdi mdi-check\" />}\n            checked={this.options.backimage}\n            onChange={e => this.onUpdateOptions({ backimage: e.target.checked })}\n          >\n            背景方格\n          </Checkbox>\n        </div>\n\n        <div className='options'>\n          圖片寬度：\n          {\n            this.state.downloadSize.map(({ value, name }) => {\n              return (\n                <Radio\n                  key={`download-szie-${value}`}\n                  name='download-size'\n                  shape='round'\n                  color='info'\n                  animation='jelly'\n                  icon={<i className=\"mdi mdi-check\" />}\n                  value={value}\n                  checked={value === this.state.downloadSizeSelected}\n                  onChange={() => this.setState({ downloadSizeSelected: value })}\n                >\n                  {value !== 4 ? `${name}px` : name}\n                </Radio>\n              );\n            })\n          }\n          <input\n            type='number'\n            min={0}\n            max={2000}\n            className='download-size-custom'\n            value={this.state.downloadSizeCustom}\n            onChange={(e) => this.setState({ downloadSizeCustom: e.target.value.replace(/\\D/, '') })}\n            onFocus={() => this.setState({ downloadSizeSelected: 4 })}\n          /> px\n        </div>\n\n        <div className='commands'>\n          <button\n            type='button'\n            className='tool tool-reset'\n            onClick={() => {\n              const formation = this.formation.map(f => ({ ...f, type: 0, backgroundImage: null, code: null, dragOver: false }));\n              this.dispatch(updateDataset({ formation, queueMode: false, queue: [] }));\n            }}\n          >\n            <MdRefresh size='2em' color='#fff' />\n            <span>重置</span>\n          </button>\n          <button\n            type='button'\n            className={`tool tool-queue ${queueMode ? 'tool-queue-on' : ''}`}\n            onClick={() => this.onQueueClick(queueMode)}\n          >\n            {\n              queueMode\n                ? <div><GiPerspectiveDiceOne size='2em' color='#fff' /><span>順序({queue.length})</span></div>\n                : <div><GiPerspectiveDiceSixFacesRandom size='2em' color='#fff' /><span>順序({queue.length})</span></div>\n            }\n          </button>\n          <button\n            type='button'\n            className='tool tool-download'\n            onClick={() => this.onDownloadClick()}\n          >\n            <MdGetApp size='2em' color='#fff' />\n            <span>下載</span>\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nToolbar.propTypes = {}\n\nconst mapStateToProps = state => {\n  return {\n    dataset: state.dataset,\n  }\n}\n\nexport default connect(mapStateToProps)(Toolbar);\n","import { APIUrl } from '../config/api';\n\nconst getCharacters = async () => fetch(APIUrl).then(data => data.json() || [])\n\nexport { getCharacters };\n","import React, { Component } from 'react';\nimport './App.scss';\n\n// import { Switch, BrowserRouter as Router, Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport Header from './container/Header';\nimport Formation from './container/Formation';\nimport List from './container/List';\nimport Toolbar from './container/Toolbar';\n\nimport { setCharacters } from './actions';\nimport { getCharacters } from './service/Characters';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.dispatch = props.dispatch;\n  }\n\n  componentDidMount() {\n    getCharacters().then(data => this.dispatch(setCharacters(data)));\n  }\n\n  render() {\n    this.database = this.props.database;\n    this.users = this.props.users;\n    return (\n      <div id='wrapper'>\n        <Header />\n        <section id='container'>\n          <div className='main'>\n            <Formation />\n            <Toolbar />\n          </div>\n          <List />\n        </section>\n      </div>\n    );\n  }\n}\n\nApp.propTypes = {}\n\nconst mapStateToProps = state => {\n  return {\n    characters: state.characters,\n  }\n}\n\nexport default connect(mapStateToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport './index.scss';\nimport './i18n';\nimport reducers from './reducers';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = createStore(\n  reducers,\n  applyMiddleware(thunk)\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}